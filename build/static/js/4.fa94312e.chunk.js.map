{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","console","log","length","graphData","map","item","x","title","y","Number","access_count","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,8FCmDjGC,UAhDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACVC,IAAMC,SAAS,IADL,mBAC7BC,EAD6B,KACtBC,EADsB,OAEVH,IAAMC,SAAS,GAFL,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAqBpC,OAjBAL,IAAMM,WAAU,WAEd,GADAC,QAAQC,IAAIT,GACRA,EAAKU,OAAQ,CACf,IAAMC,EAAYX,EAAKY,KAAI,SAACC,GAC1B,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,kBAInBZ,EACEN,EAAKY,KAAI,gBAAGM,EAAH,EAAGA,aAAH,OAAsBD,OAAOC,MAAeC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAE5EjB,EAASO,MAEV,CAACX,IAGF,6BAASsB,UAAS,UAAKC,IAAOpB,MAAZ,eAChB,yBAAKmB,UAAS,UAAKC,IAAOlB,MAAZ,YAAqBkB,IAAOC,YACxC,qCAAWnB,IAEb,yBAAKiB,UAAWC,IAAOC,WACrB,kBAAC,IAAD,CACExB,KAAMG,EACNsB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL/B,KAAM,CACJgC,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM","file":"static/js/4.fa94312e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__3zKtr\",\"graphItem\":\"UserStatsGraphs_graphItem__3SRjL\",\"total\":\"UserStatsGraphs_total__eiXzN\"};","import React from 'react';\nimport styles from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    console.log(data);\n    if (data.length) {\n      const graphData = data.map((item) => {\n        return {\n          x: item.title,\n          y: Number(item.access_count),\n        };\n      });\n\n      setTotal(\n        data.map(({ access_count }) => Number(access_count)).reduce((a, b) => a + b),\n      );\n      setGraph(graphData);\n    } \n  }, [data]);\n\n  return (\n    <section className={`${styles.graph} animeLeft`}>\n      <div className={`${styles.total} ${styles.graphItem}`}>\n        <p>Views: {total}</p>\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryPie\n          data={graph}\n          innerRadius={50}\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\n          style={{\n            data: {\n              fillOpacity: 0.9,\n              stroke: '#fff',\n              strokeWidth: 2,\n            },\n            labels: {\n              fontSize: 16,\n              fill: '#C5CBD9',\n            },\n          }}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default UserStatsGraphs;\n"],"sourceRoot":""}